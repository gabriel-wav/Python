# -*- coding: utf-8 -*-
"""Exercício_de_While.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1L6xOnylyjmaINgRDinYdlPYnPIWRXMnI

# Exercícios

## 1. Input até o usuário parar

Vamos criar um sistema de vendas. Nosso programa deve registrar os produtos e as quantidades (2 inputs) e adicionar em uma lista.

O programa deve continuar rodando até o input ser vazio, ou seja, o usuário apertar enter sem digitar nenhum produto ou quantidade.

Ao final do programa, ele deve printar todos os produtos e quantidades vendidas.

Obs: Caso queira, para o print ficar mais visual, pode usar o join para cada item ser printado em uma linha.
Sugestão para sua lista de produtos vendidos:

vendas = [
    ['maçã', 5],
    ['banana', 15],
    ['azeite', 1],
    ['vinho', 3],
]
"""

#seu código aqui
produtos = []
quantidades = []



while produto != '' and quantidade != '':
  produtos.append(produto)
  quantidades.append(quantidade)
  produto = input ('Qual o produto? ')
  quantidade = input ('Qual a quantidade? ')


print(produtos)
print(quantidades)

"""## **2 - Dados Viciados**
Descrição:
Crie um simulador de dados com 6 faces que o usuário pode jogar digitando "jogar". Mas... tem um detalhe! O dado sempre favorece o número 6.

Regras:

Use um loop while para continuar jogando até o usuário digitar "sair".

Mostre o número "sorteado".

Faça o número 6 aparecer com mais frequência que os outros.


"""

dado = [1, 2, 3, 4, 5, 6, 6, 6, 6, 6]
import random

print("🎲 Simulador de Dado Viciado 🎲")
print("Digite 'jogar' para lançar o dado ou 'sair' para encerrar.")

while True:
  comando = input('Comando ').lower()
  if comando == 'jogar':
    print(random.choice(dado))
  elif comando == 'sair':
    break
  else:
    print('Comando inválido. Tente novamente.')

"""### **3 - Quiz Interativo**
Descrição:
Monte um pequeno quiz com perguntas e múltiplas alternativas.

Regras:

O programa faz 3 a 5 perguntas com 3 opções cada.

O jogador digita a letra da resposta (a, b, c).

No final, mostre quantas ele acertou.
"""

acertos = 0

print("Bem-vindo ao Quiz!\n RESPONDA APENAS COM A LETRA DA ALTERNATIVA")

# Pergunta 1
print("1) Qual a capital do Brasil?")
print("a) São Paulo\nb) Brasília\nc) Rio de Janeiro")
resposta = input("Resposta: ").lower()
if resposta == "b":
    acertos += 1

# Pergunta 2
print("\n2) Quanto é 3 x 3?")
print("a) 6\nb) 12\nc) 9")
resposta = input("Resposta: ").lower()
if resposta == "c":
    acertos += 1

# Pergunta 3
print("\n3) Qual planeta é conhecido como planeta vermelho?")
print("a) Marte\nb) Júpiter\nc) Saturno")
resposta = input("Resposta: ").lower()
if resposta == "a":
    acertos += 1

# Resultado
print(f"\nVocê acertou {acertos} de 3 perguntas.")

"""### **🕵️‍♀️ Desafio de Lógica: Crie o Jogo da Forca!**
🎮 Contexto:
Você foi contratado por uma empresa de jogos retrô para desenvolver uma versão digital do clássico Jogo da Forca. Seu desafio é programar esse jogo usando o que você aprendeu até agora: laços for e while, listas, strings, variáveis e condicionais.

A ideia é criar um jogo totalmente jogável pelo terminal, onde o jogador deve adivinhar uma palavra secreta chutando letras, uma de cada vez. Se errar demais, perde. Se acertar tudo, vence!

🧩 O que seu jogo deve fazer:
Escolher uma palavra secreta (você pode definir uma fixa por enquanto).

Mostrar ao jogador os espaços da palavra como "_" (uma para cada letra).

Permitir que o jogador chute uma letra por vez.

Revelar as letras corretas no lugar certo.

Diminuir o número de tentativas a cada erro.

Encerrar o jogo com uma mensagem de vitória ou derrota.

💡 Regras do jogo:
O jogador tem um número limitado de tentativas.

O jogo acaba quando o jogador acerta todas as letras ou quando errar demais.

O jogo deve rodar em loop, pedindo novas letras enquanto o jogo não terminar.

🧠 Dica de pensamento lógico:
Como você pode mostrar a palavra sendo "revelada" aos poucos?

Como controlar o número de tentativas?

Como repetir a checagem da letra com um loop?

🏁 Objetivo final:
Crie uma experiência simples e divertida! Quando terminar, teste com colegas: será que eles conseguem adivinhar a palavra que você escolheu?


"""

import random

palavras = ["banana", "morango", "abacaxi", "laranja", "melancia"]
palavra = random.choice(palavras)
letras_descobertas = ["_"] * len(palavra)
tentativas = 6
letras_erradas = []

print("🎮 Bem-vindo ao Jogo da Forca!")
print("Dica: é uma fruta.")
print("Você tem", tentativas, "tentativas.\n")

while "_" in letras_descobertas and tentativas > 0:
    print("Palavra:", " ".join(letras_descobertas))
    print("Letras erradas:", ", ".join(letras_erradas))
    letra = input("Digite uma letra: ").lower()


    if letra in palavra:
        for i in range(len(palavra)):
            if palavra[i] == letra:
                letras_descobertas[i] = letra
        print("✅ Boa! Letra correta.\n")
    else:
        if letra not in letras_erradas:
            letras_erradas.append(letra)
            tentativas -= 1
            print("❌ Letra errada. Tentativas restantes:", tentativas, "\n")
        else:
            print("⚠️ Você já tentou essa letra.\n")

if "_" not in letras_descobertas:
    print("🎉 Parabéns! Você acertou: " + palavra)
else:
    print("💀 Fim de jogo! A palavra era:", palavra)