# -*- coding: utf-8 -*-
"""Exercicios_LISTAS_.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yTEUtbLj3-IvLa0JskHp-cWB0m19PvCt

# Exercícios - LISTAS

### Neste conjunto de exercícios, você será desafiado a aplicar os conceitos aprendidos sobre listas em Python. Os exercícios abrangem operações como criação de listas, remoção de elementos, adição de itens, índices, uso de list comprehensions e muito mais. Siga as instruções de cada exercício e tente resolver utilizando apenas o código dentro do script.

### 1 - Crie uma lista contendo os nomes de 5 países. Peça ao usuário para inserir o nome de mais um país. Em seguida, verifique se o país fornecido pelo usuário está na lista e exiba uma mensagem informando se ele está ou não na lista.
"""

paises = ['Brasil', 'Rússia', 'Índia', 'China', 'África do Sul']

pais = input ("Digite um país: ")

if pais in paises:
    print("O país {} está na lista!".format(pais))
else:
    print("O país {} não está na lista.".format(pais))

"""### 2 - Crie uma lista contendo os preços de 5 produtos. Em seguida, calcule e exiba o preço médio desses produtos."""

produtos = ['Bucha', 'Ovo', 'Livro', 'Vinho', 'Churrasqueira']
estoque = [3.70, 12.50, 60, 40, 299]

precoMedio = sum(estoque) / len(produtos)
print(f'O preço médio dos produtos é R$ {precoMedio:.2f}' )

"""  ### 3 - Crie uma lista com 5 cores diferentes. Peça ao usuário para inserir o nome de uma cor. Se a cor estiver na lista, remova-a e exiba a lista atualizada. Caso contrário, exiba uma mensagem informando que a cor não foi encontrada."""

cores = ['Azul', 'Vermelho', 'Verde', 'Cinza', 'Roxo']

corSelecionada = input ("Digite uma cor: ")

if corSelecionada in cores:
    print("A cor {} está na lista e foi removida!".format(corSelecionada))
    cores.remove(corSelecionada)
    print(f'Lista atualizada. {cores}.')
else:
    print("A cor {} não está na lista!".format(cor))

"""### 4 - Escreva um programa que leia duas listas de números do usuário e verifique se elas têm o mesmo comprimento e se possuem elementos iguais nas mesmas posições. Exiba uma mensagem informando se as listas são iguais ou diferentes.

****DESAFIO*****

Enunciado da Atividade - Sistema de Gestão de Estoque de Produtos

Situação Problema:

Você foi contratado para desenvolver um sistema simples de controle de estoque de uma loja. O sistema irá permitir que o usuário adicione, remova e visualize produtos no estoque, bem como calcule o valor total dos itens em estoque e a média de preços.

Requisitos:

Cadastro de Produtos: O sistema deve permitir que o usuário cadastre 5 produtos, incluindo o nome e o preço de cada um. O sistema deve armazenar esses dados em listas, sendo uma lista para os nomes dos produtos e outra para os preços.

Adicionar Produtos: O sistema deve pedir ao usuário para inserir o nome e o preço de um novo produto e adicionar esses dados nas listas de produtos. O sistema deve verificar se o produto já está cadastrado. Caso contrário, o novo produto será adicionado.

Remover Produtos: O sistema deve permitir que o usuário informe o nome de um produto para removê-lo da lista. Caso o produto esteja na lista, ele será removido. Caso contrário, o sistema deve informar que o produto não foi encontrado.

Exibir Produtos: O sistema deve exibir a lista de produtos cadastrados com os respectivos preços.

Cálculo do Valor Total: O sistema deve calcular o valor total de todos os produtos no estoque, somando os preços.

Cálculo da Média de Preços: O sistema deve calcular e exibir a média de preços dos produtos cadastrados.

Produtos:
1. Produto A - 10.50
2. Produto B - 20.30
3. Produto C - 15.00
4. Produto D - 30.00
5. Produto E - 25.00

O que você deseja fazer?
1. Adicionar Produto
2. Remover Produto
3. Exibir Produtos
4. Calcular Total do Estoque
5. Calcular Média de Preços
6. Sair

Digite a opção desejada:
"""

# Listas vazias

produtos = []
precoProduto = []

# Variavel para o laço for
quantidade = 5

# Adicionando 5 produtos e seus preços
for i in range(quantidade):
    produto = input(f"Digite o nome do {i+1}º produto (somente minúsculas): ")
    preco = float(input(f"Digite o preço do {i+1}º produto: "))

    produtos.append(produto)
    precoProduto.append(preco)

# Exibindo as listas preenchidas
print(f'Lista produtos inicial: {produtos}')
print(f'Lista preços inicial: {precoProduto}')

# Solicita para adicionar e remover produtos
produtoAdicionado = input('Com apenas letras minúsculas, digite o produto a ser adicionado: ')
produtoAdicionadoPreco = float(input('Digite o preço do produto a ser adicionado: '))

produtoRemovido = input('Com apenas letras minúsculas, digite o produto a ser removido: ')

# Adicionando produto
if produtoAdicionado not in produtos:
    print(f"O produto {produtoAdicionado} não estava na lista e foi adicionado!")
    produtos.append(produtoAdicionado)
    precoProduto.append(produtoAdicionadoPreco)

    print(f'Lista atualizada. {produtos}.')
else:
    print(f"O produto {produtoAdicionado} já está na lista.")

# Removendo produto
if produtoRemovido in produtos:
    index = produtos.index(produtoRemovido)  # Obtendo o índice do produto a ser removido
    print(f"O produto {produtoRemovido} está na lista e foi removido!")
    produtos.pop(index)  # Remove o produto
    precoProduto.pop(index)  # Remove o preço correspondente

    print(f'Lista atualizada. {produtos}.')
else:
    print(f"O produto {produtoRemovido} não está na lista.")

# Calculando a média e total
totalPrecos = sum(precoProduto)
media = totalPrecos / len(precoProduto)

# Exibindo listas finais
print(f'Lista produtos final: {produtos}')
print(f'Lista preços final: {precoProduto}')

# Exibindo cálculos finais
print(f'A média dos preços é: R$ {media:.2f}')
print(f'O total dos preços é: R$ {totalPrecos:.2f}')